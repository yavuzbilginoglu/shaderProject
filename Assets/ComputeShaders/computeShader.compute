#pragma kernel ChangeRed
#pragma kernel ChangeGreen

Texture2D<float4> SourceTex;
RWTexture2D<float4> _ResultTex;

float3 RGBtoHSV(float3 color)
{
    float cmax = max(color.r, max(color.g, color.b));
    float cmin = min(color.r, min(color.g, color.b));
    float delta = cmax - cmin;

    float h = 0;
    if (delta != 0)
    {
        if (cmax == color.r)
            h = (color.g - color.b) / delta;
        else if (cmax == color.g)
            h = 2 + (color.b - color.r) / delta;
        else
            h = 4 + (color.r - color.g) / delta;
        h = h * 60;
        if (h < 0)
            h = h + 360;
    }

    float s = 0;
    if (cmax != 0)
        s = delta / cmax;

    float v = cmax;

    return float3(h / 360.0, s, v);
}

[numthreads(8, 8, 1)]
void ChangeRed(uint3 id : SV_DispatchThreadID)
{
    float4 color = SourceTex[id.xy];
    float3 hsv = RGBtoHSV(color.rgb);
	
    if (hsv.x > 0.95 || hsv.x < 0.05 || (hsv.x > 0.8 && hsv.y > 0.5))
    {
        color.g = 1.0;
        color.r = 0.0;
        color.b = 0.0;
    }

    _ResultTex[id.xy] = color;
}

[numthreads(8, 8, 1)]
void ChangeGreen(uint3 id : SV_DispatchThreadID)
{
    float4 color = SourceTex[id.xy];
    float3 hsv = RGBtoHSV(color.rgb);
    if (hsv.x > 0.1 && hsv.x < 0.35 && hsv.y > 0.3 && hsv.y < 0.8)
    {
		color.g = 1.0;
		color.r = 1.0;
		color.b = 0;
    }
    _ResultTex[id.xy] = color;
}
